[
  {
    "objectID": "tutorial1.html",
    "href": "tutorial1.html",
    "title": "Tutorial 1",
    "section": "",
    "text": "For this first tutorial, we are going to (i) download R and Rstudio, (ii) discover the software and (iii) make our first data visualisation. We are also going to see how to export them and input them in a .tex file.",
    "crumbs": [
      "Tutorial 1"
    ]
  },
  {
    "objectID": "tutorial1.html#download-r-and-rstudio",
    "href": "tutorial1.html#download-r-and-rstudio",
    "title": "Tutorial 1",
    "section": "Download R and RStudio",
    "text": "Download R and RStudio\nR is a free software used in many contexts: data cleaning, data visualisation, econometrics, machine and deep learning, among others. It is an object-based format, meaning that we are going to manipulate objects through a series of command.\nR can be used directely from a command terminal, but we prefer to use RStudio, an IDE, to make our lifes easier.\n\nDownload R\nDownload RStudio\n\n\nYou can download both from here https://posit.co/download/rstudio-desktop/.\n\n\nOpen RStudio",
    "crumbs": [
      "Tutorial 1"
    ]
  },
  {
    "objectID": "tutorial1.html#folder-organization",
    "href": "tutorial1.html#folder-organization",
    "title": "Tutorial 1",
    "section": "Folder organization",
    "text": "Folder organization\nComputers are organized around folder. We are going to work in a working directory (wd), but we need to identify it.\n/Users/mmoglia/\n├── Documents/\n│   ├── Personal/\n│   │   ├── Finances/\n│   │   ├── Health/\n│   │   └── Education/\n│   └── Miscellaneous/\n├── Downloads/\n├── Music/\n│   ├── Artists/\n│   │   ├── Artist_Name/\n│   │   │   ├── Albums/\n│   │   │   └── Singles/\n│   └── Playlists/\n├── Pictures/\n│   ├── Vacations/\n│   ├── Events/\n│   ├── Family/\n│   └── Miscellaneous/\n├── Videos/\n│   ├── Movies/\n│   ├── Tutorials/\n│   └── Personal/\n└── courses/\n    ├── 2024_ECO102/\n    ├── 2025_eco1s002/\n    └── Research/\nHere we are going to work in ~/courses/2025_eco1s002/. This folder may (and should!) contains subfolders, for instance: /code, /output, /raw_data, etc.\n\nNaming convention\nA typical tip is to choose simple and short titles for the files and the scripts. For instance, this file is named tutorial1.qmd. Your code can be named code_tutorial1. It should be self-explanatory.\n\n\n\n\n\n\nTip\n\n\n\nAvoid at all cost to use spaces or special characters in your file names. Prefer instead an underscore or a score.",
    "crumbs": [
      "Tutorial 1"
    ]
  },
  {
    "objectID": "tutorial1.html#first-step-in-r",
    "href": "tutorial1.html#first-step-in-r",
    "title": "Tutorial 1",
    "section": "First step in R",
    "text": "First step in R\n\nOpen a script\nR has built-in functions but most useful functions should be called using libraries. These libraries should be first downloaded then loaded into your project.\nFirst, open RStudio and opens a new script. You should have an empty page. You may want to write some words at the top of it to have an idea of what this code does. You can use # to comment code.\n\n#_______________________________________\n# This script opens a dataset and proceeds\n# to data visualization.\n#\n# Author: Matéo Moglia\n# Date: 12/02/2025\n#_______________________________________\n\nsetwd(\"/Users/mmoglia/Dropbox/courses/polytechnique/2025_eco1s002/site/2025_eco1s002\")\npath &lt;- \"/Users/mmoglia/Dropbox/courses/polytechnique/2025_eco1s002/site/2025_eco1s002\"\n\nHere, I set the working directory and create an object called path using the &lt;- operator. I will be able to call my path thanks to this object instead of typing the path everytime I need it.\n\n\nOur first data\nWe can load a built-in dataframe, the iris dataset, into an object called data.\n\ndata &lt;- iris\nclass(data)\n\n[1] \"data.frame\"\n\nhead(data)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\n\nData description\nBy clicking on the object in the Environement panel, I can visualize it. I can also write some code to describe it:\n\ntable(data$Species)\n\n\n    setosa versicolor  virginica \n        50         50         50 \n\nsummary(data$Sepal.Length)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.300   5.100   5.800   5.843   6.400   7.900 \n\n\nHere, I use the table function to have a frequency table of the variable Species and the function summary to compute summary statistics of the variable Sepal.Length.\nNow, I want to visualize the data. To do so, we can use base R function plot:\n\nplot(iris$Sepal.Length,iris$Sepal.Width)\n\n\n\n\n\n\n\n\n\n\nOur first graph!\nWe can also use a very popular library for dataviz, ggplot2. First, we install it, then we load it, and we are going to be able to use it.\n\ninstall.packages(\"ggplot2\",repos = \"http://cran.us.r-project.org\")\nlibrary(ggplot2)\n\n\n\n\n\n\n\nNote\n\n\n\nAll packages have to be downloaded and loaded this way. Note that once you’ve downloaded a package on your computer, you do not need to install it but you still need to load it through the library function.\n\n\n\ng1 &lt;- ggplot(data = data, mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +\n  geom_point() +\n  theme_minimal()\ng1\n\n\n\n\n\n\n\n\nThis looks better! To produce this graph we used different information:\n\nThe ggplot command takes data and mapping as input.\n\ndata should be the dataset you want to visualize, here we named it data\nmapping takes aes (for aesthetics)\n\nHere, the aesthetics are the x and y axis, and the color one, to distinguish between the species.\n\ngeom_point allows to plot… points\ntheme_minimal makes the graph tidy, with a white background, etc.\n\n\nNow, we can save it:\n\nggsave(filename = paste0(path,\"/output/graph_iris.png\"),plot = g1)\n\nSaving 7 x 5 in image\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe function paste0 is useful to concatenate text. Here, instead of writing the full path, we concatenate the object path (which happens to be our path) and the end of the path, including the name of the output.\n\n\n\n\nData manipulation\nTo finish this -short- introduction to R, I introduce a new package, probably the most popular one in R: dplyr. As before, we install then load the library.\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\n\nLet’s imagine we want to filter the dataset to keep only the setosa. In base R, we need to extract the lines of iris for which Species==\"setosa\". Because R is object based, we can multiple objects, here: base_setosa.\n\nThe data frame iris is close to a matrix, hence, we can extract using notations close to the matrix ones. Hence data[1,1] would give us the first line of the first column (in this order) of data. Here, we filt the lines using a condition: data$Species==\"setosa\". Do not forget the ,.\n\n\n# Base R: Filter rows where Species is \"setosa\"\nbase_setosa &lt;- data[data$Species == \"setosa\", ]\nhead(base_setosa)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nUsing dplyr and the pipe operator %&gt;%, we apply the function filter on Species.\n\n# dplyr: Filter rows where Species is \"setosa\"\ndplyr_setosa &lt;- iris %&gt;% \n  filter(Species == \"setosa\")\nhead(dplyr_setosa)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nNext, we can select specific columns.\n\n# Base R: Select only Sepal.Length and Sepal.Width columns\nbase_columns &lt;- iris[, c(\"Sepal.Length\", \"Sepal.Width\")]\nhead(base_columns)\n\n  Sepal.Length Sepal.Width\n1          5.1         3.5\n2          4.9         3.0\n3          4.7         3.2\n4          4.6         3.1\n5          5.0         3.6\n6          5.4         3.9\n\n# dplyr: Select only Sepal.Length and Sepal.Width columns\ndplyr_columns &lt;- iris %&gt;% \n  select(Sepal.Length, Sepal.Width)\nhead(dplyr_columns)\n\n  Sepal.Length Sepal.Width\n1          5.1         3.5\n2          4.9         3.0\n3          4.7         3.2\n4          4.6         3.1\n5          5.0         3.6\n6          5.4         3.9\n\n\n\n# Base R: Create a new column with Sepal.Area (Sepal.Length * Sepal.Width)\niris$Sepal.Area &lt;- iris$Sepal.Length * iris$Sepal.Width\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species Sepal.Area\n1          5.1         3.5          1.4         0.2  setosa      17.85\n2          4.9         3.0          1.4         0.2  setosa      14.70\n3          4.7         3.2          1.3         0.2  setosa      15.04\n4          4.6         3.1          1.5         0.2  setosa      14.26\n5          5.0         3.6          1.4         0.2  setosa      18.00\n6          5.4         3.9          1.7         0.4  setosa      21.06\n\n# dplyr: Create a new column with Sepal.Area (Sepal.Length * Sepal.Width)\ndplyr_iris &lt;- iris %&gt;% \n  mutate(Sepal.Area = Sepal.Length * Sepal.Width)\nhead(dplyr_iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species Sepal.Area\n1          5.1         3.5          1.4         0.2  setosa      17.85\n2          4.9         3.0          1.4         0.2  setosa      14.70\n3          4.7         3.2          1.3         0.2  setosa      15.04\n4          4.6         3.1          1.5         0.2  setosa      14.26\n5          5.0         3.6          1.4         0.2  setosa      18.00\n6          5.4         3.9          1.7         0.4  setosa      21.06\n\n\nThe advantage of dplyr is to allow for many computations:\n\ndplyr_grouped &lt;- iris %&gt;%\n  mutate(Sepal.Area = Sepal.Length * Sepal.Width) %&gt;%\n  mutate(is.Sepal.Large = ifelse(Sepal.Area &gt; median(Sepal.Area),1,0)) %&gt;% \n  group_by(Species) %&gt;%\n  summarize(mean_sepal_length = mean(Sepal.Length),\n            count_sepal_large = sum(is.Sepal.Large))\nprint(dplyr_grouped)\n\n# A tibble: 3 × 3\n  Species    mean_sepal_length count_sepal_large\n  &lt;fct&gt;                  &lt;dbl&gt;             &lt;dbl&gt;\n1 setosa                  5.01                21\n2 versicolor              5.94                18\n3 virginica               6.59                36\n\n\nThis dataset can be, of course represented visually:\n\nggplot(dplyr_grouped, aes(x = Species, y = count_sepal_large, fill = Species)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Histogram of Sepal Count by Species\",\n       x = \"Species\", y = \"Count of large sepals\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nBut we can also export it to LaTeX:\n\ninstall.packages(\"xtable\")\nlibrary(xtable)\n\n\ncolnames(dplyr_grouped) &lt;- c(\"Species\", \"Mean_Sepal_Length\", \"Count_Sepal_Large\")\nprint(xtable(dplyr_grouped), type = \"latex\", file = paste0(path,\"/output/sepal_large.tex\"))",
    "crumbs": [
      "Tutorial 1"
    ]
  },
  {
    "objectID": "tutorial1.html#first-step-in-latex",
    "href": "tutorial1.html#first-step-in-latex",
    "title": "Tutorial 1",
    "section": "First step in LaTeX",
    "text": "First step in LaTeX\nLaTeX is very popular software to produce scientic writings. It is relatively easy to use. From now on, it is mandatory to produce output you would hand using LaTeX. You have three options to use LaTeX:\n\nUse any text editor and compile the file using the console\nUse an IDE, like TexStudio or TexLive\nUse an online IDE like Overleaf\n\n\nThere are plenty of tutorials over the web (or ChatGPT) to know how to use LaTeX, so I am going to be quick.\n\nOpen a blank project in Overleaf. It should look like that:\n\\documentclass{article}\n\n%% PREAMBULE ------------------\n\n\\usepackage{graphicx} % Required for inserting images\n\n%% METADATA -------------------\n\n\\title{Tutorial one}\n\\author{Matéo Moglia}\n\\date{February 2024}\n\n%% DOCUMENT START ------------\n\n\\begin{document}\n\n\\maketitle\n\n\\section{Introduction}\n\n\\end{document}\nThree elements are mandatory here: the \\documentclass{} call, the \\begin{document} and the \\end{docoment} parts. All texts should be these last two commands. The preambule is of high importance: it allows you to load packages to perform specific tasks. Here, graphicx is useful to input images. Other popular packages include:\n\ngeometry allows you to change the margins of the pages,\nbooktab to build nice-looking tables\ntikz to draw graphs directly in LaTeX\nxcolor to create and choose your favorite colors\n\nYou can then directly write any text you like after \\begin{document}.\n\nMath mode\nMost interesting is the math mode. You can write in line using $ x = y$ or in an equation environment:\n\\begin{equation}\n  \\mu_k = \\int_0^{+\\infty} x^k f(x) dx = \\int_0^{+\\infty} t^{-\\frac{k}{\\alpha}} \\exp ^{-t} dt\n\\end{equation}\n\n\n\n\n\n\nTip\n\n\n\nAn environment starts with \\begin{name} and ends with \\end{name}. The environment can be an equation, to center a large chunk of text, a figure, a table, etc.\n\n\n\n\nInclude our results\n\\begin{figure}\n  \\centering # To center the graph\n  \\includegraphics[width=8,height=10]{graph/graph_iris.png}\n  \\caption{Iris Sepals Length and Width}\n\\end{figure}\nWe work within the figure environment, center the graphic, include it with some options and add a caption. The graph should be uploaded in the project first! Here, I stored it in the folder graph.\nTo input the table, we can use \\input{}:\n\\input{table/sepal_large.tex}\nNo need to specify the environment as it was directly created by the xtable function earlier on!\n\n\nCompile the file\nLaTeX is not a “What You See Is What You Get” software, like Word or Canvas. You need to compile the code to obtain the results (usually a .pdf), that you can further download.",
    "crumbs": [
      "Tutorial 1"
    ]
  },
  {
    "objectID": "projects.html#project-2",
    "href": "projects.html#project-2",
    "title": "Projects",
    "section": "Project 2",
    "text": "Project 2"
  },
  {
    "objectID": "projects.html#project-3",
    "href": "projects.html#project-3",
    "title": "Projects",
    "section": "Project 3",
    "text": "Project 3"
  },
  {
    "objectID": "home.html",
    "href": "home.html",
    "title": "Home",
    "section": "",
    "text": "This website will walk you through the tutorials for the Topics in Economics (1S002) course of Ecole Polytechnique’s Bachelor program. The course has 3 main objectives: (i) know the basics of R (ii) manipulate the standard statistical and empirical tools (iii) write an original research output.\n\nPractical information\nTA: Mateo Moglia\nSchedule: Wednesday morning (check Synapses regularly for any changes in room).\nBring you own laptop or use the lab’s computer. The data are made available on Synapses.\nRequired software: R and its IDE, RStudio (all free). You may download it here. Create a free account to use Overleaf.\nRules: Send me an email if you miss the class. You are grown-up adults, I trust you to follow thoroughly the class. Do not hesitate to work in small groups.\n\n\n\n\n\n\n\nLog\n\n\n\n\n\n\nv0.1 - 7/12/24 - Tutorial 1\nv0.0 - 5/12/24 - Creation",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "home.html#welcome-to-the-class",
    "href": "home.html#welcome-to-the-class",
    "title": "Home",
    "section": "",
    "text": "This website will walk you through the tutorials for the Topics in Economics (1S002) course of Ecole Polytechnique’s Bachelor program. The course has 3 main objectives: (i) know the basics of R (ii) manipulate the standard statistical and empirical tools (iii) write an original research output.\n\nPractical information\nTA: Mateo Moglia\nSchedule: Wednesday morning (check Synapses regularly for any changes in room).\nBring you own laptop or use the lab’s computer. The data are made available on Synapses.\nRequired software: R and its IDE, RStudio (all free). You may download it here. Create a free account to use Overleaf.\nRules: Send me an email if you miss the class. You are grown-up adults, I trust you to follow thoroughly the class. Do not hesitate to work in small groups.\n\n\n\n\n\n\n\nLog\n\n\n\n\n\n\nv0.1 - 7/12/24 - Tutorial 1\nv0.0 - 5/12/24 - Creation",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "home.html#class-outline",
    "href": "home.html#class-outline",
    "title": "Home",
    "section": "Class outline",
    "text": "Class outline\n\nTutorial 1 (February 12, computer lab)\n\nPresentation of the class objectives\nFirst hands on R\nFirst hands on LaTeX\n\nTutorial 2 (February 19, computer lab)\n\nReplication of Mankiw et al. (1997)\nOLS estimator\n\nTutorial 3 (March 5)\n\nThe Solow model and its extension\n\nTutorial 4 (March 12)\n\nReplication of Acemoglu et al. (2010)\nExport the results\n\nTutorial 5 (March 19)\n\nCorrection of the mock exam\n\nTutorial 6 (March 26)\n\nAutonomous replication of an IV paper\n\nTutorial 7 (April 2)\n\nDifference-in-differences estimator\n\nTutorial 8 (April 9)\n\nThe social multiplier\n\nTutorial 9 (April 9)\n\nLabor force participation\n\nTutorial 10 (April 16)\n\nSpatial segregration\nRegression in discontinuity\n\nTutorial 11 (April 30)\n\nMock exam\n\nTutorial 12 (May 14)\n\nThe marriage market\n\nTutorial 13 (May 21)\n\nFinal Q&A before the exam\n\nTutorial 14 (May 28)\n\nRestitution of the group project",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "tutorial2.html",
    "href": "tutorial2.html",
    "title": "Tutorial 2",
    "section": "",
    "text": "Last week, we learnt how to manage simple datasets using R. We are going replicate our very first paper!",
    "crumbs": [
      "Tutorial 2"
    ]
  },
  {
    "objectID": "tutorial2.html#mankiw-romer-weil-1994",
    "href": "tutorial2.html#mankiw-romer-weil-1994",
    "title": "Tutorial 2",
    "section": "Mankiw, Romer, Weil (1994)",
    "text": "Mankiw, Romer, Weil (1994)\nThis paper is …\n\nMain objectives\n\nOpen the dataset\nInspect and clean\nRun the main regression\nMake a graph\n\n\n\nData source\nDownload the data from Moodle.\n\n\nFolder organization\nWe are going to work in tutorial2. You may want to create additional subfolders like raw_data, code, output to store the raw data, the code, and the output we create.\n/Users/mmoglia/Dropbox/\n└── courses/\n    └── 2025_eco1s002\n      └── tutorial2\n\npath &lt;- \"/Users/mmoglia/Dropbox/courses/polytechnique/2025_eco1s002/tutorial2\"",
    "crumbs": [
      "Tutorial 2"
    ]
  },
  {
    "objectID": "home.html#about-this-site-and-my-inspirations",
    "href": "home.html#about-this-site-and-my-inspirations",
    "title": "Home",
    "section": "About this site and my inspirations",
    "text": "About this site and my inspirations\nI created this site for teaching purpose. It is of course perfectible and any constructive comment is more than welcome (write me an email!). I took inspiration from these sources:\n\nThe great Florian Oswald teaching material at Sciences Po. Do not hesitate to check his teaching material (in English)\nThe tutorials of the French Ministry of Ecology (in French)\nThe infamous online book Econometrics with R (in English)",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "tutorial1.html#what-is-r-set-up-and-launch",
    "href": "tutorial1.html#what-is-r-set-up-and-launch",
    "title": "Tutorial 1",
    "section": "What is R? Set-up and launch",
    "text": "What is R? Set-up and launch\nR is a free and open-source software used in many contexts: data cleaning, data visualisation, econometrics, machine and deep learning, among others. It is supported by a lively and active user community. R is an object-based language, meaning that we are going to manipulate objects through a series of commands.\nR can be used directely from a command terminal, but we prefer to use RStudio, an IDE, to make our lifes easier. An IDE is an interface that eases the use of a software. The most popular one is RStudio. To use it, we need to:\n\nDownload R\nThen, download RStudio\n\n\nYou can download both from here https://posit.co/download/rstudio-desktop/.",
    "crumbs": [
      "Tutorial 1"
    ]
  },
  {
    "objectID": "tutorial1.html#general-best-practices",
    "href": "tutorial1.html#general-best-practices",
    "title": "Tutorial 1",
    "section": "General best practices",
    "text": "General best practices\nBefore jumping to coding per se, let me recall you some best practices when performing computer-based tasks.\n\nFolder organization\nComputers are organized around folder. We are going to work in a working directory (wd), but we need to identify it. My folder tree looks like it:\n/Users/mmoglia/Dropbox/\n├── Documents/\n│   ├── perso/\n│   │   ├── banque/\n│   │   ├── admin/\n│   │   └── festival/\n├── Downloads/\n├── Music/\n├── Pictures/\n│   ├── famille/\n│   ├── vacances/\n└── courses/\n│   ├── polytechnique/\n|   |   ├── 2024_eco102/\n|   |   ├── 2025_eco1s002/\n├── research/\nHere we are going to work in ~/courses/2025_eco1s002/. This folder may (and should!) contains subfolders, for instance: /code, /output, /raw_data, etc.\n\n\nNaming convention\nA typical tip is to choose simple and short titles for the files and the scripts. For instance, this file is named tutorial1.qmd. Your code can be named code_tutorial1.R. It should be self-explanatory.\n\n\n\n\n\n\nTip\n\n\n\nAvoid at all cost to use spaces or special characters in your file names. Prefer instead an underscore or a score.\n\n\n\n\nWhen writing code\nAlways comment your code, make it readable for your future self but also for others. You may use your code in a week, a month, a year, and should be able to directly understands it! When creating objects, functions, or whatever, give it simple but understandable names. For instance, if you create a data frame containing wages for individuals aged between 25 and 30, you way call it wage_25_30 and not w2530 (too short) or wage_individuals_aged_25_30 (too long).\nMoreover, especially for large project, you want to have different scripts. Always keep scripts short and with clear names. For instance 1_clean_data.R, 2_import_wages.R, 3_merge_datasets.R, and 4_data_analysis.R.",
    "crumbs": [
      "Tutorial 1"
    ]
  },
  {
    "objectID": "tutorial1.html#first-step-in-rrstudio",
    "href": "tutorial1.html#first-step-in-rrstudio",
    "title": "Tutorial 1",
    "section": "First step in R/Rstudio",
    "text": "First step in R/Rstudio\n\nSome useful terms\nSo far, we talked about script. We are going to manipulate object using functions. Objects can be of different classes: matrix, vector, character, numeric, data.frame, etc. Some functions are already in R but some are not. Hence, we need to load them thanks to packages.\n\n\nOpen a script\nWe are going to create our first script (the extension is .R). This script contains all commands you want to run. R has built-in functions but most useful functions should be called using library(). These libraries should be first downloaded then loaded into your project.\nFirst, open RStudio and opens a new script. You should have an empty page. You may want to write some words at the top of it to have an idea of what this code does. You can use # to comment code.\n\n#-------------------------------------------------------------------------------\n# This script opens a dataset and proceeds\n# to data visualization.\n#\n# Author: Matéo Moglia\n# Date: 12/02/2025\n#-------------------------------------------------------------------------------\n\n# Set your working directory\nsetwd(\"/Users/mmoglia/Dropbox/courses/polytechnique/2025_eco1s002/site\")\npath &lt;- \"/Users/mmoglia/Dropbox/courses/polytechnique/2025_eco1s002/site\"\n\nHere, I set the working directory using setwd(). Notice that we created our first object, named path using the assignment operator &lt;- (I personally prefer to use = which works exactly the same).\n\n\n\n\n\n\nTip\n\n\n\nWhat is the class of path? Hint: use the function class()\n\n\n\n\nOur first data manipulation\nWe can load a very famous built-in data set, the iris dataset, into an object called data.\n\ndata = iris # Attribute to data the data set iris\nclass(data) # Check its class\n\n[1] \"data.frame\"\n\nhead(data) # Preview the first lines of data\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nNotice that the two objects we created so far can be seen in the Environment pane.\n\n\nData description\nBy clicking on the object in the Environement panel, you can visualize it, but you can also write some code to describe it. As we just check, data is a data.frame object. It is made of several columns and rows. To call a specific column in a dataframe, we use the $ operator. To know all the column names in data, we can use the function names(). To know the “size” of the dataframe, the right function is dim(): the first element is the number of rows and the second the number of columns.\n\n\n\n\n\n\nTip\n\n\n\nYou can also call a column by its position in the dataframe. For instance, to call the second column you can type data[,2]. For the second row: data[,2]. What should you write to print the 10th element of the 3rd column?\n\n\nWe know how to call specific part of the dataframe. To describe the data, we can use several built-in functions.\n\ntable(data$Species) # To make a frequency table\n\n\n    setosa versicolor  virginica \n        50         50         50 \n\nsummary(data$Sepal.Length) # To provide summary statistics\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.300   5.100   5.800   5.843   6.400   7.900 \n\n\nNow, I want to visualize the data. To do so, we can use base R function plot:\n\nplot(iris$Sepal.Length,iris$Sepal.Width)\n\n\n\n\n\n\n\n\n\n\nOur first graph!\nWe can also use a very popular library for dataviz, ggplot2. First, we install it, then we load it, and we are going to be able to use it.\n\ninstall.packages(\"ggplot2\",repos = \"http://cran.us.r-project.org\")\nlibrary(ggplot2)\n\n\n\n\n\n\n\nNote\n\n\n\nAll packages have to be downloaded and loaded this way. Note that once you’ve downloaded a package on your computer, you do not need to install it but you still need to load it through the library function.\n\n\n\ng1 &lt;- ggplot(data = data, mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +\n  geom_point() +\n  theme_minimal()\ng1\n\n\n\n\n\n\n\n\nThis looks better! To produce this graph we used different information:\n\nThe ggplot command takes data and mapping as input.\n\ndata should be the dataset you want to visualize, here we named it data\nmapping takes aes (for aesthetics)\n\nHere, the aesthetics are the x and y axis, and the color one, to distinguish between the species.\n\ngeom_point allows to plot… points\ntheme_minimal makes the graph tidy, with a white background, etc.\n\n\nNow, we can save it:\n\nggsave(filename = paste0(path,\"/output/graph_iris.png\"),plot = g1)\n\nSaving 7 x 5 in image\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe function paste0 is useful to concatenate text. Here, instead of writing the full path, we concatenate the object path (which happens to be our path) and the end of the path, including the name of the output.\n\n\n\n\nData manipulation\nTo finish this -short- introduction to R, I introduce a new package, probably the most popular one in R: dplyr. As before, we install then load the library.\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\n\nLet’s imagine we want to filter the dataset to keep only the setosa. In base R, we need to extract the lines of iris for which Species==\"setosa\". Because R is object based, we can multiple objects, here: base_setosa.\n\nThe data frame iris is close to a matrix, hence, we can extract using notations close to the matrix ones. Hence data[1,1] would give us the first line of the first column (in this order) of data. Here, we filt the lines using a condition: data$Species==\"setosa\". Do not forget the ,.\n\n\n# Base R: Filter rows where Species is \"setosa\"\nbase_setosa &lt;- data[data$Species == \"setosa\", ]\nhead(base_setosa)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nUsing dplyr and the pipe operator %&gt;%, we apply the function filter on Species.\n\n# dplyr: Filter rows where Species is \"setosa\"\ndplyr_setosa &lt;- iris %&gt;% \n  filter(Species == \"setosa\")\nhead(dplyr_setosa)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nNext, we can select specific columns.\n\n# Base R: Select only Sepal.Length and Sepal.Width columns\nbase_columns &lt;- iris[, c(\"Sepal.Length\", \"Sepal.Width\")]\nhead(base_columns)\n\n  Sepal.Length Sepal.Width\n1          5.1         3.5\n2          4.9         3.0\n3          4.7         3.2\n4          4.6         3.1\n5          5.0         3.6\n6          5.4         3.9\n\n# dplyr: Select only Sepal.Length and Sepal.Width columns\ndplyr_columns &lt;- iris %&gt;% \n  select(Sepal.Length, Sepal.Width)\nhead(dplyr_columns)\n\n  Sepal.Length Sepal.Width\n1          5.1         3.5\n2          4.9         3.0\n3          4.7         3.2\n4          4.6         3.1\n5          5.0         3.6\n6          5.4         3.9\n\n\n\n# Base R: Create a new column with Sepal.Area (Sepal.Length * Sepal.Width)\niris$Sepal.Area &lt;- iris$Sepal.Length * iris$Sepal.Width\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species Sepal.Area\n1          5.1         3.5          1.4         0.2  setosa      17.85\n2          4.9         3.0          1.4         0.2  setosa      14.70\n3          4.7         3.2          1.3         0.2  setosa      15.04\n4          4.6         3.1          1.5         0.2  setosa      14.26\n5          5.0         3.6          1.4         0.2  setosa      18.00\n6          5.4         3.9          1.7         0.4  setosa      21.06\n\n# dplyr: Create a new column with Sepal.Area (Sepal.Length * Sepal.Width)\ndplyr_iris &lt;- iris %&gt;% \n  mutate(Sepal.Area = Sepal.Length * Sepal.Width)\nhead(dplyr_iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species Sepal.Area\n1          5.1         3.5          1.4         0.2  setosa      17.85\n2          4.9         3.0          1.4         0.2  setosa      14.70\n3          4.7         3.2          1.3         0.2  setosa      15.04\n4          4.6         3.1          1.5         0.2  setosa      14.26\n5          5.0         3.6          1.4         0.2  setosa      18.00\n6          5.4         3.9          1.7         0.4  setosa      21.06\n\n\nThe advantage of dplyr is to allow for many computations:\n\ndplyr_grouped &lt;- iris %&gt;%\n  mutate(Sepal.Area = Sepal.Length * Sepal.Width) %&gt;%\n  mutate(is.Sepal.Large = ifelse(Sepal.Area &gt; median(Sepal.Area),1,0)) %&gt;% \n  group_by(Species) %&gt;%\n  summarize(mean_sepal_length = mean(Sepal.Length),\n            count_sepal_large = sum(is.Sepal.Large))\nprint(dplyr_grouped)\n\n# A tibble: 3 × 3\n  Species    mean_sepal_length count_sepal_large\n  &lt;fct&gt;                  &lt;dbl&gt;             &lt;dbl&gt;\n1 setosa                  5.01                21\n2 versicolor              5.94                18\n3 virginica               6.59                36\n\n\nThis dataset can be, of course represented visually:\n\nggplot(dplyr_grouped, aes(x = Species, y = count_sepal_large, fill = Species)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Histogram of Sepal Count by Species\",\n       x = \"Species\", y = \"Count of large sepals\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nBut we can also export it to LaTeX:\n\ninstall.packages(\"xtable\")\nlibrary(xtable)\n\n\ncolnames(dplyr_grouped) &lt;- c(\"Species\", \"Mean_Sepal_Length\", \"Count_Sepal_Large\")\nprint(xtable(dplyr_grouped), type = \"latex\", file = paste0(path,\"/output/sepal_large.tex\"))",
    "crumbs": [
      "Tutorial 1"
    ]
  }
]